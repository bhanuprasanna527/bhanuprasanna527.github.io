[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Posts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nFirst Quarto Blog\n\n\n\n\n\n\n\nFirst\n\n\nBlog\n\n\nTest\n\n\n\n\nI am new to Quarto Blog and this is a trial for Latex Equations.\n\n\n\n\n\n\nOct 25, 2023\n\n\nBhanu Prasanna Koppolu\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Code\nimport numpy as np\nimport pandas as pd"
  },
  {
    "objectID": "about.html#this-is-a-python-test",
    "href": "about.html#this-is-a-python-test",
    "title": "About",
    "section": "",
    "text": "Code\nimport numpy as np\nimport pandas as pd"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nkbp-nse\n\n\n\n\n\n\n\nProjects\n\n\nPython\n\n\nFinance\n\n\n\n\nMy personal Stock Data Retriever Project kbp-nse.\n\n\n\n\n\n\nOct 25, 2023\n\n\nBhanu Prasanna Koppolu\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/2023-10-25-kbp-nse/index.html",
    "href": "projects/2023-10-25-kbp-nse/index.html",
    "title": "kbp-nse",
    "section": "",
    "text": "CitationBibTeX citation:@online{prasanna koppolu2023,\n  author = {Prasanna Koppolu, Bhanu},\n  title = {Kbp-Nse},\n  date = {2023-10-25},\n  url = {https://bhanuprasanna527.github.io/projects/2023-10-25-kbp-nse/},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nPrasanna Koppolu, Bhanu. 2023. ‚ÄúKbp-Nse.‚Äù October 25, 2023.\nhttps://bhanuprasanna527.github.io/projects/2023-10-25-kbp-nse/."
  },
  {
    "objectID": "posts/2023-10-25-first-quarto-blog/index.html",
    "href": "posts/2023-10-25-first-quarto-blog/index.html",
    "title": "First Quarto Blog",
    "section": "",
    "text": "\\[c = a + b\\]"
  },
  {
    "objectID": "posts/2023-10-25-first-quarto-blog/index.html#this-is-my-first-blog",
    "href": "posts/2023-10-25-first-quarto-blog/index.html#this-is-my-first-blog",
    "title": "First Quarto Blog",
    "section": "",
    "text": "\\[c = a + b\\]"
  },
  {
    "objectID": "notes.html",
    "href": "notes.html",
    "title": "Notes",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nC++ Notes\n\n\n\n\n\n\n\nNotes\n\n\nC++\n\n\nChallenge\n\n\n\n\nDistilled C++ Notes\n\n\n\n\n\n\nOct 25, 2023\n\n\nBhanu Prasanna Koppolu\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "challenges.html",
    "href": "challenges.html",
    "title": "Challenges",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n90 Days DSA Challenge\n\n\n\n\n\n\n\nChallenge\n\n\nDSA\n\n\nCode\n\n\n\n\nLet‚Äôs Start\n\n\n\n\n\n\nOct 25, 2023\n\n\nBhanu Prasanna Koppolu\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "challenges/2023-10-25-90_DSA_Challenge/index.html",
    "href": "challenges/2023-10-25-90_DSA_Challenge/index.html",
    "title": "90 Days DSA Challenge",
    "section": "",
    "text": "My Name is Bhanu Prasanna, Started M.Sc. Data Science at TU Dortmund.\nWant to become a Quant Developer\n\nThat is all there is to know about me. Let‚Äôs Start with the challenge."
  },
  {
    "objectID": "challenges/2023-10-25-90_DSA_Challenge/index.html#hi-there-lets-start",
    "href": "challenges/2023-10-25-90_DSA_Challenge/index.html#hi-there-lets-start",
    "title": "90 Days DSA Challenge",
    "section": "",
    "text": "My Name is Bhanu Prasanna, Started M.Sc. Data Science at TU Dortmund.\nWant to become a Quant Developer\n\nThat is all there is to know about me. Let‚Äôs Start with the challenge."
  },
  {
    "objectID": "challenges/2023-10-25-90_DSA_Challenge/index.html#days-dsa-challenge",
    "href": "challenges/2023-10-25-90_DSA_Challenge/index.html#days-dsa-challenge",
    "title": "90 Days DSA Challenge",
    "section": "90 Days DSA Challenge",
    "text": "90 Days DSA Challenge\nWhy am I doing this? I have created a python library, learnt how to use Tensorflow and other ML Libraries. There was always a missing piece needed to be filled.\nThe missing piece is DSA."
  },
  {
    "objectID": "challenges/2023-10-25-90_DSA_Challenge/index.html#shall-we-start-now-already",
    "href": "challenges/2023-10-25-90_DSA_Challenge/index.html#shall-we-start-now-already",
    "title": "90 Days DSA Challenge",
    "section": "Shall we Start Now Already? ü§®",
    "text": "Shall we Start Now Already? ü§®\nFrom 26th October, 2023 the challenge will officially start.\n\nNotes Available. Click Here!\n\nLet‚Äôs go Step-by-Step.\n\nChoosing the Programming Language \n\n\nI. Choosing the Programming Language\nAs I want to become a Quant Developer. The most used programming language is C++.\n\nNote: Most firms in the world use the latest C++ version. The current version of C++ is 20 as of the time of this challenge.\n\nThe resources that I used for Learning C++ are provided below:\n\nYouTube - C++ 20 - FreeCodeCamp Course\nYouTube - Time and Space Complexity - ‚úÖ 26-10-2023\nYouTube - Introduction to Recursion - ‚úÖ 27-10-2023\nYouTube - Maths for DSA - 1 - ‚úÖ 27-10-2023\nYouTube - Math for DSA - 2 - ‚úÖ 27-10-2023"
  },
  {
    "objectID": "challenges/2023-10-25-90_DSA_Challenge/index.html#day-1---time-and-space-complexity",
    "href": "challenges/2023-10-25-90_DSA_Challenge/index.html#day-1---time-and-space-complexity",
    "title": "90 Days DSA Challenge",
    "section": "Day 1 - Time and Space Complexity",
    "text": "Day 1 - Time and Space Complexity\nFor Day 1 - I don‚Äôt want to start coding but instead understand the more theoretical parts.\nI have completed Time and Space Complexity from the YouTube Video. Click Here!."
  },
  {
    "objectID": "challenges/2023-10-25-90_DSA_Challenge/index.html#day-2---recursion-and-math-for-dsa",
    "href": "challenges/2023-10-25-90_DSA_Challenge/index.html#day-2---recursion-and-math-for-dsa",
    "title": "90 Days DSA Challenge",
    "section": "Day 2 - Recursion and Math for DSA",
    "text": "Day 2 - Recursion and Math for DSA\nFor Day 2 - I will be going through Recursion concept and Math for DSA.\nI have completed Recursion from the YouTube Video. Click Here!.\nI have completed Math for DSA - 1 from the YouTube Video. Click Here!.\nI have completed Math for DSA - 2 from the YouTube Video. Click Here!."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bhanu Prasanna",
    "section": "",
    "text": "M.Sc. Data Science at TU Dortmund\n\n\n\nIt‚Äôs Black. üëÅÔ∏èüëÅÔ∏è are Safe"
  },
  {
    "objectID": "notes/2023-10-25-C++/index.html",
    "href": "notes/2023-10-25-C++/index.html",
    "title": "C++ Notes",
    "section": "",
    "text": "Definition - Time Complexity is the relationship about how the time will grow as the input grows.\nTime Complexity != Total Time Taken by a Machine to execute.\nThere are mainly 4 points for Time Complexity:\n\nAlways look for the Worst Case Time Complexity.\nAlways look at the Complexity for Large Data.\nAlways Ignore Constants.\nAlways Ignore Less Dominant Terms. From Point 2\n\n\n\n\n\n\nIf the recurrence become more complex then finding the time complexity will become harder. So, Akra-Bazzi method is the easy and simple method to find the Time Complexity.\nThe method goes as follows:\nLet \\(p\\) be the unique real number for which \\[\\sum_{i=1}^{k} a_ib_i^p = 1\\]\nThen,\n\\[T(x) = \\Theta\\biggl(x^p + x^p \\int_1^x \\frac{g(u)}{u^{p+1}} du\\biggl)\\]\n\n\n\nThe usage of Asymptotic Notation is for specifying and for the identification of the upper and lower bounds.\n\\[\\lim_{x \\to \\infty} \\frac{f(n)}{g(n)}\\]\nBelow are the Asymptotic Notations:\n\n\nThis is the Upper Bound and the complexity cannot go beyond this Upper Bound.\n\\[\\lim_{x \\to \\infty} \\frac{f(n)}{g(n)} &lt; \\infty\\]\n\n\n\nThis is the opposite of Big - \\(O\\) Notation. This is the Lower Bound and the function complexity will atleast require Lower Bound complexity.\n\\[\\lim_{x \\to \\infty} \\frac{f(n)}{g(n)} &gt; 0\\]\n\n\n\nThe Big - \\(\\Theta\\) Notation was created when a function lies in both Upper Bound (Big - \\(O\\)) and Lower Bound (Big - \\(\\Omega\\)).\n\\[0 &lt; \\lim_{x \\to \\infty} \\frac{f(n)}{g(n)} &lt; \\infty\\]\n\n\n\nThe Little - \\(o\\) is same as Big - \\(O\\) but it is slightly loose and strictly lesser than.\n\\[\\lim_{x \\to \\infty} \\frac{f(n)}{g(n)} = 0\\]\n\n\n\nThe Little - \\(\\omega\\) is same as Big - \\(\\Omega\\) but it is slightly loose and strictly greater than.\n\\[\\lim_{x \\to \\infty} \\frac{f(n)}{g(n)} = \\infty\\]\n\n\n\n\n\nSpace Complexity is measured by combining the Input Space and the Auxilary Space. The same Asymptotic Notations discussed above are the ones used for Space Complexity.\n\n\n\n\nThis concept cannot be explained here but look in the video for more reference, the video details each type very clearly. Click Here!\nThis is the end of Day - 1."
  },
  {
    "objectID": "notes/2023-10-25-C++/index.html#time-complexity",
    "href": "notes/2023-10-25-C++/index.html#time-complexity",
    "title": "C++ Notes",
    "section": "",
    "text": "Definition - Time Complexity is the relationship about how the time will grow as the input grows.\nTime Complexity != Total Time Taken by a Machine to execute.\nThere are mainly 4 points for Time Complexity:\n\nAlways look for the Worst Case Time Complexity.\nAlways look at the Complexity for Large Data.\nAlways Ignore Constants.\nAlways Ignore Less Dominant Terms. From Point 2"
  },
  {
    "objectID": "notes/2023-10-25-C++/index.html#akra-bazzi-time-complexity-method",
    "href": "notes/2023-10-25-C++/index.html#akra-bazzi-time-complexity-method",
    "title": "C++ Notes",
    "section": "",
    "text": "If the recurrence become more complex then finding the time complexity will become harder. So, Akra-Bazzi method is the easy and simple method to find the Time Complexity.\nThe method goes as follows:\nLet \\(p\\) be the unique real number for which \\[\\sum_{i=1}^{k} a_ib_i^p = 1\\]\nThen,\n\\[T(x) = \\Theta\\biggl(x^p + x^p \\int_1^x \\frac{g(u)}{u^{p+1}} du\\biggl)\\]"
  },
  {
    "objectID": "notes/2023-10-25-C++/index.html#asymptotic-notation",
    "href": "notes/2023-10-25-C++/index.html#asymptotic-notation",
    "title": "C++ Notes",
    "section": "",
    "text": "The usage of Asymptotic Notation is for specifying and for the identification of the upper and lower bounds.\n\\[\\lim_{x \\to \\infty} \\frac{f(n)}{g(n)}\\]\nBelow are the Asymptotic Notations:\n\n\nThis is the Upper Bound and the complexity cannot go beyond this Upper Bound.\n\\[\\lim_{x \\to \\infty} \\frac{f(n)}{g(n)} &lt; \\infty\\]\n\n\n\nThis is the opposite of Big - \\(O\\) Notation. This is the Lower Bound and the function complexity will atleast require Lower Bound complexity.\n\\[\\lim_{x \\to \\infty} \\frac{f(n)}{g(n)} &gt; 0\\]\n\n\n\nThe Big - \\(\\Theta\\) Notation was created when a function lies in both Upper Bound (Big - \\(O\\)) and Lower Bound (Big - \\(\\Omega\\)).\n\\[0 &lt; \\lim_{x \\to \\infty} \\frac{f(n)}{g(n)} &lt; \\infty\\]\n\n\n\nThe Little - \\(o\\) is same as Big - \\(O\\) but it is slightly loose and strictly lesser than.\n\\[\\lim_{x \\to \\infty} \\frac{f(n)}{g(n)} = 0\\]\n\n\n\nThe Little - \\(\\omega\\) is same as Big - \\(\\Omega\\) but it is slightly loose and strictly greater than.\n\\[\\lim_{x \\to \\infty} \\frac{f(n)}{g(n)} = \\infty\\]"
  },
  {
    "objectID": "notes/2023-10-25-C++/index.html#space-complexity",
    "href": "notes/2023-10-25-C++/index.html#space-complexity",
    "title": "C++ Notes",
    "section": "",
    "text": "Space Complexity is measured by combining the Input Space and the Auxilary Space. The same Asymptotic Notations discussed above are the ones used for Space Complexity."
  },
  {
    "objectID": "notes/2023-10-25-C++/index.html#linear-recurrence-homogenous-and-non-homogenous",
    "href": "notes/2023-10-25-C++/index.html#linear-recurrence-homogenous-and-non-homogenous",
    "title": "C++ Notes",
    "section": "",
    "text": "This concept cannot be explained here but look in the video for more reference, the video details each type very clearly. Click Here!\nThis is the end of Day - 1."
  },
  {
    "objectID": "notes/2023-10-25-C++/index.html#recursion",
    "href": "notes/2023-10-25-C++/index.html#recursion",
    "title": "C++ Notes",
    "section": "Recursion",
    "text": "Recursion\n\nImportant Points\n\nRecursion helps in solving bigger/complex problems into smaller problems which can be solved in a simple way.\nYou can convert a Recursion solution into Iterative and Vice Versa.\nSpace Complexity is not constant due to Recursive Calls.\n\n\n\nTypes of Recurrence Relations\n\nLinear Recurrence Relation\nDivide & Conquer Recurrence Relation\n\n\n\nHow to understand & approach a problem?\n\nIdentify if you can break down problem into smaller problems.\nWrite the Recurrence Relations if needed.\nDraw the Recursive Tree.\nAbout the Tree:\n\nSee the flow of functions, how they are getting into the stack.\nIdentify and Focus on Left Tree Calls and Right Tree Calls.\nDraw the tree and pointers using Pen & Paper for better understanding. *\nUse a debugger to see the flow.\n\nSee how the values and what type of values are returned at each step. See where the function will come out. In the end you will come out of the main function.\nThree Variables to concentrate on:\n\nArguments\nReturn Type\nBody of Function\n\nResources used:\n\nClick Here!"
  },
  {
    "objectID": "notes/2023-10-25-C++/index.html#math-for-dsa",
    "href": "notes/2023-10-25-C++/index.html#math-for-dsa",
    "title": "C++ Notes",
    "section": "Math for DSA",
    "text": "Math for DSA\n\nResources used:\n\nMath for DSA 1 - Click Here!\nMath for DSA 2 - Click Here!\n\n\nThis is the end of Day - 2."
  }
]